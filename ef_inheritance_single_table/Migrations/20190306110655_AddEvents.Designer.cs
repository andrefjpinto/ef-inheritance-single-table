// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ef_inheritance_single_table;

namespace ef_inheritance_single_table.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20190306110655_AddEvents")]
    partial class AddEvents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ef_inheritance_single_table.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EventType");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasDiscriminator<int>("EventType");
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.ProjectActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivityId");

                    b.Property<Guid>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectActivities");
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.AdHocEvent", b =>
                {
                    b.HasBaseType("ef_inheritance_single_table.Models.Event");

                    b.Property<bool?>("IsCentrallyCreated");

                    b.Property<Guid>("ProjectActivityId")
                        .HasColumnName("ProjectActivityId");

                    b.HasIndex("ProjectActivityId");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.PrivateEvent", b =>
                {
                    b.HasBaseType("ef_inheritance_single_table.Models.Event");

                    b.Property<Guid>("ProjectActivityId")
                        .HasColumnName("ProjectActivityId");

                    b.HasIndex("ProjectActivityId");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.ProjectActivity", b =>
                {
                    b.HasOne("ef_inheritance_single_table.Models.Activity", "Activity")
                        .WithMany("ProjectActivities")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ef_inheritance_single_table.Models.Project", "Project")
                        .WithMany("ProjectActivities")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.AdHocEvent", b =>
                {
                    b.HasOne("ef_inheritance_single_table.Models.ProjectActivity", "ProjectActivity")
                        .WithMany("AdHocEvents")
                        .HasForeignKey("ProjectActivityId")
                        .HasConstraintName("FK_Events_ProjectActivities_ProjectActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ef_inheritance_single_table.Models.PrivateEvent", b =>
                {
                    b.HasOne("ef_inheritance_single_table.Models.ProjectActivity", "ProjectActivity")
                        .WithMany("PrivateEvents")
                        .HasForeignKey("ProjectActivityId")
                        .HasConstraintName("FK_Events_ProjectActivities_ProjectActivityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
